import React, { useState } from "react";
import { useRef } from "react";
import "./Temp.scss";
function Output(props) {
  return (
    <div className="rightDiv">
      <h2>Output</h2>
      {props.values.map((val, index) => {
        return <div key={index}>{val}</div>;
      })}
    </div>
  );
}
function Input(props) {
  const inputRef = useRef();
  //   const radioRef = useRef();
  let [radio, setRadio] = useState("stack");
  return (
    <div className="leftDiv">
      <div id="radio">
        <div>
          <input
            id="stack"
            type="radio"
            name="pop"
            checked={radio === "stack"}
            onChange={() => setRadio("stack")}
          />
          <label>STACK</label>
        </div>
        <div>
          <input
            id="queue"
            type="radio"
            name="pop"
            checked={radio === "queue"}
            onChange={() => setRadio("queue")}
          />
          <label>QUEUE</label>
        </div>
      </div>
      <input type="text" ref={inputRef} />
      <button
        onClick={() => {
          props.pushValue(inputRef.current.value);
          inputRef.current.value = "";
        }}
      >
        PUSH
      </button>
      <button onClick={() => props.popValue(radio)}>POP</button>
    </div>
  );
}
function Temp() {
  const [values, setValue] = useState([]);
  let pushValue = (val) => {
    setValue([val, ...values]);
  };
  let popValue = (pobBy) => {
    // let val = [];
    pobBy !== "stack" ? values.pop() : values.shift();
    setValue([...values]);
  };
  return (
    <div>
      <Input
        pushValue={(val) => pushValue(val)}
        popValue={(popBy) => popValue(popBy)}
      />
      <Output values={values} />
    </div>
  );
}

export default Temp;
